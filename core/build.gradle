plugins {
    id 'com.android.library'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'kotlinx-serialization'
    id 'dagger.hilt.android.plugin'
    id 'io.gitlab.arturbosch.detekt'
}

apply from: "$project.rootDir/spotless.gradle"

android {
    compileSdkVersion rootProject.compileSdkVersion
    buildToolsVersion rootProject.buildToolsVersion

    defaultConfig {
        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.targetSdkVersion
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    kotlinOptions {
        freeCompilerArgs += [
            "-Xuse-experimental=kotlinx.coroutines.ExperimentalCoroutinesApi",
            "-Xuse-experimental=kotlinx.coroutines.ObsoleteCoroutinesApi",
            "-Xuse-experimental=androidx.paging.ExperimentalPagingApi",
            "-Xuse-experimental=androidx.compose.ui.ExperimentalComposeUiApi",
            "-Xuse-experimental=androidx.compose.material.ExperimentalMaterialApi",
            "-Xuse-experimental=androidx.compose.material3.ExperimentalMaterial3Api",
            "-Xuse-experimental=coil.annotation.ExperimentalCoilApi",
            "-Xuse-experimental=kotlinx.serialization.ExperimentalSerializationApi",
            "-Xopt-in=kotlinx.coroutines.FlowPreview"
        ]
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }
}

dependencies {
    api "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutinesVersion"
    api "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutinesVersion"
    api "org.jetbrains.kotlinx:kotlinx-serialization-json:$serializationVersion"

    api "androidx.activity:activity-ktx:$activityVersion"
    api "androidx.appcompat:appcompat:$appcompatVersion"
    api "androidx.core:core-ktx:$coreVersion"
    api "androidx.core:core-splashscreen:$coreSplashScreenVersion"
    api "androidx.fragment:fragment-ktx:$fragmentVersion"
    api "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycleVersion"
    api "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycleVersion"
    api "androidx.paging:paging-runtime-ktx:$pagingVersion"
    api "androidx.paging:paging-compose:$pagingComposeVersion"
    api "androidx.room:room-paging:$roomVersion"

    api "com.google.android.material:material:$materialVersion"
    api "com.google.dagger:hilt-android:$daggerVersion"
    kapt "com.google.dagger:hilt-compiler:$daggerVersion"
    api "com.google.firebase:firebase-abt:$firebaseAbtVersion"
    api "com.google.firebase:firebase-analytics-ktx:$firebaseAnalytics"
    api "com.google.firebase:firebase-core:$firebaseCoreVersion"
    api "com.google.firebase:firebase-crashlytics-ktx:$firebaseCrashlyticsVersion"
    api "com.google.firebase:firebase-common-ktx:$firebaseCommonVersion"
    api "com.google.firebase:firebase-config-ktx:$firebaseConfigVersion"
    api "com.google.android.play:core-ktx:$playcoreVersion"

    api "com.squareup.retrofit2:retrofit:$retrofitVersion"
    api "com.squareup.retrofit2:converter-gson:$retrofitVersion"
    api "com.squareup.retrofit2:converter-moshi:$retrofitVersion"
    api "com.squareup.okhttp3:logging-interceptor:$okhttpLoggingInterceptorVersion"
    api "com.jakewharton.timber:timber:$timberVersion"
    api "com.jakewharton.retrofit:retrofit2-kotlinx-serialization-converter:$serializationConverterVersion"
    api "com.ashokvarma.android:gander-persistence:$ganderVersion"
    api "com.ashokvarma.android:gander-imdb:$ganderVersion"

    testImplementation "junit:junit:$junitVersion"
    androidTestImplementation "androidx.test.ext:junit:$testJunitVersion"
    androidTestImplementation "androidx.test.espresso:espresso-core:$testEspressoVersion"
}