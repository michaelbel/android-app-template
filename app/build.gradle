// Плагин google-services должен быть перед firebase
plugins {
    id 'com.android.application'
    id 'dagger.hilt.android.plugin'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'kotlin-parcelize'
    id 'kotlinx-serialization'
    id 'androidx.navigation.safeargs'
    id 'com.google.gms.google-services'
    id 'com.google.firebase.appdistribution'
    id 'com.google.firebase.crashlytics'
    id 'io.gitlab.arturbosch.detekt'
}

apply from: "$project.rootDir/spotless.gradle"

// Для локальных сборок берем ключи из локального хранилища keystore.properties.
// Для удаленных сборок на GitHub Actions берем ключи из Actions Secrets.
// Каталог ../config отсутствует в удаленном репозитории.

def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file("config/keystore.properties")
if (keystorePropertiesFile.exists()) {
    println "Start extract release keystore config from keystore.properties"
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
} else {
    println "Start extract release keystore config from global vars"
    keystoreProperties['keyAlias'] = System.env.KEYSTORE_KEY_ALIAS ?: ''
    keystoreProperties['keyPassword'] = System.env.KEYSTORE_KEY_PASSWORD ?: ''
    keystoreProperties['storePassword'] = System.env.KEYSTORE_STORE_PASSWORD ?: ''
    keystoreProperties['storeFile'] = System.env.KEYSTORE_FILE_LOCATION ?: ''
}

android {
    compileSdk rootProject.compileSdkVersion
    buildToolsVersion rootProject.buildToolsVersion

    defaultConfig {
        applicationId "org.michaelbel.template"
        minSdk rootProject.minSdkVersion
        targetSdk rootProject.targetSdkVersion
        versionCode rootProject.generateVersionCode()
        versionName rootProject.versionName
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        setProperty("archivesBaseName", "app" + "-v" + versionName + "(" + versionCode + ")")
    }

    signingConfigs {
        release {
            storeFile file(keystoreProperties['storeFile'])
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storePassword keystoreProperties['storePassword']
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'

            firebaseAppDistribution {
                appId = "1:33042426453:android:f766db4a18b6b79e9102dc" // google-services.json mobilesdk_app_id
                artifactType="APK"
                testers="michaelbel24865@gmail.com"
                releaseNotes="Release Build"
                serviceCredentialsFile = "$rootDir/config/firebase-app-distribution.json"
                //groups="testers"
                //releaseNotesFile="/path/to/releasenotes.txt"
            }
        }
    }

    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }

    kotlinOptions {
        freeCompilerArgs += [
            "-Xuse-experimental=kotlinx.coroutines.ExperimentalCoroutinesApi",
            "-Xuse-experimental=kotlinx.coroutines.ObsoleteCoroutinesApi",
            "-Xuse-experimental=androidx.paging.ExperimentalPagingApi",
            "-Xuse-experimental=androidx.compose.ui.ExperimentalComposeUiApi",
            "-Xuse-experimental=androidx.compose.material.ExperimentalMaterialApi",
            "-Xuse-experimental=androidx.compose.material3.ExperimentalMaterial3Api",
            "-Xuse-experimental=coil.annotation.ExperimentalCoilApi",
            "-Xuse-experimental=kotlinx.serialization.ExperimentalSerializationApi",
            "-Xopt-in=kotlinx.coroutines.FlowPreview"
        ]
    }

    composeOptions {
        kotlinCompilerVersion rootProject.kotlinVersion
        kotlinCompilerExtensionVersion rootProject.composeVersion
    }

    testOptions {
        unitTests.includeAndroidResources = true
        unitTests.returnDefaultValues = true
        reportDir = "$rootDir/test-reports"
        resultsDir = "$rootDir/test-results"
    }

    buildFeatures {
        compose true
        viewBinding true

        // Disable unused AGP features
        aidl false
        buildConfig false
        renderScript false
        resValues false
        shaders false
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    kapt {
        arguments {
            arg('dagger.formatGeneratedSource', 'enabled') // Форматирование сгенерированного кода dagger
            arg('dagger.fastInit', 'enabled') // Оптимизация сгенерированного кода для ускорения инициализации
            arg('dagger.fullBindingGraphValidation', "WARNING") // or ERROR, полная валидация графа
        }
    }
}

dependencies {
    implementation project(':core')

    implementation "androidx.activity:activity-compose:$activityVersion"
    implementation "androidx.annotation:annotation:$annotationVersion"
    implementation "androidx.annotation:annotation-experimental:$annotationExperimentalVersion"
    implementation "androidx.asynclayoutinflater:asynclayoutinflater:$asynclayoutinflaterVersion"
    implementation "androidx.browser:browser:$browserVersion"
    implementation "androidx.cardview:cardview:$cardviewVersion"
    implementation "androidx.collection:collection-ktx:$collectionVersion"
    implementation "androidx.compose.animation:animation:$composeVersion"
    implementation "androidx.compose.compiler:compiler:$composeVersion"
    implementation "androidx.compose.foundation:foundation:$composeVersion"
    implementation "androidx.compose.foundation:foundation-layout:$composeVersion"
    implementation "androidx.compose.material3:material3:$material3Version"
    implementation "androidx.compose.material3:material3-samples:$material3Version"
    implementation "androidx.compose.material:material-icons-core-samples:$materialIconsVersion"
    implementation "androidx.compose.material:material-icons-extended:$materialIconsVersion"
    implementation "androidx.compose.runtime:runtime:$composeVersion"
    implementation "androidx.compose.runtime:runtime-livedata:$composeVersion"
    implementation "androidx.compose.ui:ui:$composeVersion"
    implementation "androidx.compose.ui:ui-viewbinding:$composeVersion"
    implementation "androidx.compose.ui:ui-tooling:$composeVersion"
    implementation "androidx.constraintlayout:constraintlayout:$constraintlayoutVersion"
    implementation "androidx.constraintlayout:constraintlayout-compose:$constraintlayoutComposeVersion"
    implementation "androidx.core:core-role:$coreroleVersion"
    implementation "androidx.datastore:datastore-core:$datastoreVersion"
    implementation "androidx.datastore:datastore-preferences:$datastoreVersion"
    implementation "androidx.datastore:datastore-preferences-core:$datastoreVersion"
    implementation "androidx.hilt:hilt-navigation-fragment:$hiltNavigationFragmentVersion"
    implementation "androidx.hilt:hilt-work:$hiltWorkVersion"
    implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycleVersion"
              kapt "androidx.lifecycle:lifecycle-common-java8:$lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-viewmodel-savedstate:$lifecycleVersion"
    implementation "androidx.navigation:navigation-fragment-ktx:$navigationVersion"
    implementation "androidx.navigation:navigation-ui-ktx:$navigationVersion"
    implementation "androidx.recyclerview:recyclerview:$recyclerviewVersion"
    implementation "androidx.room:room-runtime:$roomVersion"
              kapt "androidx.room:room-compiler:$roomVersion"
    implementation "androidx.room:room-ktx:$roomVersion"
    implementation "androidx.savedstate:savedstate-ktx:$savedstateVersion"
    implementation "androidx.sharetarget:sharetarget:$sharetargetVersion"
    implementation "androidx.swiperefreshlayout:swiperefreshlayout:$swiperefreshlayoutVersion"
    implementation "androidx.viewpager2:viewpager2:$viewpager2Version"
    implementation "androidx.work:work-runtime-ktx:$workVersion"

    implementation "com.google.accompanist:accompanist-appcompat-theme:$accompanistAppcompatThemeVersion"
    implementation "com.google.accompanist:accompanist-drawablepainter:$accompanistDrawablePainterVersion"
    implementation "com.google.accompanist:accompanist-insets:$accompanistInsetsVersion"
    implementation "com.google.accompanist:accompanist-insets-ui:$accompanistInsetsVersion"
    implementation "com.google.accompanist:accompanist-flowlayout:$accompanistFlowlayoutVersion"
    implementation "com.google.accompanist:accompanist-navigation-animation:$accompanistNavigationAnimationVersion"
    implementation "com.google.accompanist:accompanist-navigation-material:$accompanistNavigationMaterialVersion"
    implementation "com.google.accompanist:accompanist-pager:$accompanistPagerVersion"
    implementation "com.google.accompanist:accompanist-pager-indicators:$accompanistPagerVersion"
    implementation "com.google.accompanist:accompanist-permissions:$accompanistPermissionsVersion"
    implementation "com.google.accompanist:accompanist-placeholder:$accompanistPlaceholderVersion"
    implementation "com.google.accompanist:accompanist-placeholder-material:$accompanistPlaceholderVersion"
    implementation "com.google.accompanist:accompanist-systemuicontroller:$accompanistSystemuicontrollerVersion"
    implementation "com.google.accompanist:accompanist-swiperefresh:$accompanistSwiperefreshVersion"
    implementation "com.google.dagger:hilt-android:$daggerVersion"
              kapt "com.google.dagger:hilt-compiler:$daggerVersion"
    implementation "com.google.android.exoplayer:exoplayer:$exoplayerVersion"
    implementation "com.google.android.exoplayer:exoplayer-core:$exoplayerVersion"
    implementation "com.google.android.exoplayer:exoplayer-dash:$exoplayerVersion"
    implementation "com.google.android.exoplayer:exoplayer-ui:$exoplayerVersion"
    implementation "com.google.android.gms:play-services-ads:$adsVersion"
    implementation "com.google.android.gms:play-services-auth:$authVersion"
    implementation "com.google.android.material:compose-theme-adapter:$materialComposeThemeAdapterVersion"

    implementation "com.squareup.moshi:moshi:$moshiVersion"
              kapt "com.squareup.moshi:moshi-kotlin-codegen:$moshiVersion"
    implementation "com.squareup.picasso:picasso:$picassoVersion"
    implementation "com.github.kirich1409:viewbindingpropertydelegate:$viewBindingPropertyDelegateVersion"
    implementation "io.coil-kt:coil:$coilVersion"
    implementation "io.coil-kt:coil-compose:$coilVersion"
    implementation "com.vk:android-sdk-core:$vkVersion"
    implementation "com.vk:android-sdk-api:$vkVersion"

    //debugImplementation "androidx.fragment:fragment-testing:$fragmentVersion" — not uses exported in manifest

    androidTestImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutinesVersion"
    androidTestImplementation "androidx.arch.core:core-testing:$coreTestingVersion"
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$composeVersion"
    androidTestImplementation "androidx.navigation:navigation-testing:$navigationVersion"
    androidTestImplementation "androidx.test.ext:junit-ktx:$testJunitVersion"
    androidTestImplementation "androidx.test.espresso:espresso-accessibility:$testEspressoVersion"
    androidTestImplementation "androidx.test.espresso:espresso-contrib:$testEspressoVersion"
    androidTestImplementation "androidx.test.espresso:espresso-core:$testEspressoVersion"
    androidTestImplementation "androidx.test.espresso:espresso-intents:$testEspressoVersion"
    androidTestImplementation "androidx.test.uiautomator:uiautomator:$testUianimatorVersion"
    androidTestImplementation "androidx.test:rules:$testRulesVersion"
    androidTestImplementation "androidx.work:work-testing:$workVersion"
    androidTestImplementation "com.google.truth:truth:$truthVersion"

    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutinesVersion"
    testImplementation "androidx.test:core:$androidxTestCore"
    testImplementation "androidx.room:room-testing:$roomVersion"

    testImplementation "junit:junit:$junitVersion"
    testImplementation "io.mockk:mockk:$mockkVersion"
    testImplementation "org.mockito:mockito-core:$mockitoVersion"
    testImplementation "org.robolectric:robolectric:$robolectricVersion"

    debugImplementation "androidx.compose.ui:ui-test-manifest:$composeVersion"
}