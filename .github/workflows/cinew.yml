# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  
env:
  GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
  KEYSTORE_FILE: ${{secrets.KEYSTORE_FILE}}
  KEYSTORE_KEY_ALIAS: ${{secrets.KEYSTORE_KEY_ALIAS}}
  KEYSTORE_KEY_PASSWORD: ${{secrets.KEYSTORE_KEY_PASSWORD}}
  KEYSTORE_STORE_PASSWORD: ${{secrets.KEYSTORE_STORE_PASSWORD}}  

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!
          
      - name: Setup JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 1.11
          
      - name: Decode Keystore File
        id: decode_keystore_file
        uses: timheuer/base64-to-file@v1
        with:
          fileName: 'keystore_release.jks'
          encodedString: ${{ secrets.KEYSTORE_FILE }}
          
      - name: Set Decoded File Location as Environment
        run: echo "KEYSTORE_FILE=${{steps.decode_keystore_file.outputs.filePath}}" >> $GITHUB_ENV
        
      - name: Expose Version Name
        uses: michpohl/android-expose-version-name-action@v1.0.0
        with:
          path: app/build.gradle
          expose-version-name: 'true'
          expose-version-code: 'true'
          
      - name: Build Artifacts
        run: bash ./gradlew app:assembleRelease appDistributionUploadRelease --stacktrace
